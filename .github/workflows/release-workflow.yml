name: Create release images

on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release_cloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the packer install and test
        uses: ./.github/actions/packer
        with:
          rocketchat_version: '${{ github.event.release.tag_name }}'
          do_token: ${{ secrets.do_token }}
          aws_key_id: ${{ secrets.aws_key_id }}
          aws_secret_key: ${{ secrets.aws_secret_key }}
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Packer image build*'
          mention: 'here'
          mention_if: 'failure'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}

  release_snap:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Parse channel from version
        run: |
          export ROCKETCHAT_VERSION=${{ github.event.release.tag_name }}
          echo "CHANNEL=${ROCKETCHAT_VERSION:0:1}.x" >> $GITHUB_ENV 
        id: version
      - name: Set build version 
        run: sed -i 's/ROCKET_CHAT_BUILD_VERSION/${{ github.event.release.tag_name }}/g' ./snapcraft/snap/snapcraft.yaml
      - name: Build snap
        uses: snapcore/action-build@v1
        id: build
        with:
          path: "./snapcraft"
      - name: Install snap
        run: sudo snap install --dangerous ${{ steps.build.outputs.snap }}
      - name: Test the installed snap
        run: ./test_scripts/install_test.sh
      - name: Remove snap
        run: sudo snap remove rocketchat-server
      - name: Publish snap to edge channel
        uses: snapcore/action-publish@v1
        with:
          store_login: ${{ secrets.SNAPCRAFT_LOGIN }}
          snap: ${{ steps.build.outputs.snap }}
          release: ${{ env.CHANNEL }}/edge
      - name: Test snap updating
        run: ./test_scripts/update_test.sh
      - name: Promote edge to candidate
        run: |
          echo "${{ secrets.SNAPCRAFT_LOGIN }}" | snapcraft login --with -
          REVISION=$(snapcraft list-revisions rocketchat-server --arch amd64 | grep $CHANNEL/edge | cut -d' ' -f 1 | head -n 1)
          snapcraft release rocketchat-server $REVISION $CHANNEL/candidate
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Snapcraft build*'
          mention: 'here'
          mention_if: 'failure'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
